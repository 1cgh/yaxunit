//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2021-2023 BIA-Technologies Limited Liability Company
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

#Область СлужебныйПрограммныйИнтерфейс

Процедура ИсполняемыеСценарии() Экспорт
	
	ЮТТесты
		.ВТранзакции()
		.УдалениеТестовыхДанных()
		.ДобавитьТест("Удалить")
		.ДобавитьТест("ВариантыПараметров")
		.ДобавитьТест("СоздатьГруппу")
	;
		
КонецПроцедуры

Процедура Удалить() Экспорт
	
	Ссылки = Новый Массив;
	Ссылки.Добавить(ЮТест.Данные().СоздатьЭлемент("Справочники.Банки"));
	Ссылки.Добавить(ЮТест.Данные().СоздатьДокумент("Документы.ПриходТовара"));
	Ссылки.Добавить(
		ЮТест.Данные()
			.КонструкторОбъекта("Документы.ПриходТовара")
			.Провести()
	);
	
	Для Каждого Ссылка Из Ссылки Цикл
		
		СсылкаСуществует = ПомощникТестированияВызовСервера.СсылкаСуществует(Ссылка);
		ЮТест.ОжидаетЧто(СсылкаСуществует, "Ссылка на несуществующий объект").ЭтоИстина();
		
	КонецЦикла;
	
	ЮТТестовыеДанные.Удалить(Ссылки);
	
	Для Каждого Ссылка Из Ссылки Цикл
		
		СсылкаСуществует = ПомощникТестированияВызовСервера.СсылкаСуществует(Ссылка);
		ЮТест.ОжидаетЧто(СсылкаСуществует, "Объект не удален по ссылке").ЭтоЛожь();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ВариантыПараметров() Экспорт
	
	Ключи = "Числа, Строки";
	БазоваяСтруктура = Новый Структура(Ключи);
	Значения = Новый Структура(Ключи, ЮТОбщий.ЗначениеВМассиве(1, 2), ЮТОбщий.ЗначениеВМассиве("1", "2"));
	
	Результат = ЮТест.Данные().ВариантыПараметров(БазоваяСтруктура, Значения);
	
	ЮТест.ОжидаетЧто(Результат)
		.ИмеетТип("Массив")
		.ИмеетДлину(7)
		.Элемент(0).Равно(БазоваяСтруктура)
		.Элемент(1).Равно(Новый Структура(Ключи, 1))
		.Элемент(2).Равно(Новый Структура(Ключи, 1, "1"))
		.Элемент(3).Равно(Новый Структура(Ключи, 1, "2"))
		.Элемент(5).Равно(Новый Структура(Ключи, 2, "1"))
		.Элемент(6).Равно(Новый Структура(Ключи, 2, "2"));
	
КонецПроцедуры

Процедура СоздатьГруппу() Экспорт
	
	Группа = ЮТест.Данные().СоздатьГруппу("Справочники.Товары");
	
	ЭтоГруппа = ЮТЗапросы.ЗначениеРеквизита(Группа, "ЭтоГруппа");
	ЮТест.ОжидаетЧто(ЭтоГруппа).ЭтоИстина();
	
КонецПроцедуры

#КонецОбласти

