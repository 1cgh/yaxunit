//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2021-2023 BIA-Technologies Limited Liability Company
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

#Область СлужебныйПрограммныйИнтерфейс
	
Функция ТипизированныеДанныеТабличногоДокумента(ТабличныйДокумент, ОписанияТипов, КэшЗначений, ЗаменяемыеЗначения, ПараметрыЗаполнения) Экспорт
	
	ТабличныйДокумент = ТабличныйДокумент(ТабличныйДокумент);
	
	Колонки = ОписаниеКолонок(ТабличныйДокумент, ОписанияТипов);
	
	ТаблицаЗначений = Новый ТаблицаЗначений();
	Для Каждого ОписаниеКолонки Из Колонки Цикл
		ТаблицаЗначений.Колонки.Добавить(ОписаниеКолонки.Имя, ОписаниеКолонки.ОписаниеТипа);
	КонецЦикла;
	
	ПодготовитьПараметрыЗаполненияТаблицы(КэшЗначений, ЗаменяемыеЗначения, ПараметрыЗаполнения, Колонки);
	ПараметрыСоздания = ПараметрыЗаполнения.СозданиеОбъектовМетаданных;
	
	Выборка = ВыборкаИзТабличногоДокумента(ТабличныйДокумент);
	
	Пока Выборка.Следующий() Цикл
		
		Строка = ТаблицаЗначений.Добавить();
		
		Для Каждого ОписаниеКолонки Из Колонки Цикл
			
			ЗначениеПредставления = Выборка[ОписаниеКолонки.Индекс];
			
			Если ПустаяСтрока(ЗначениеПредставления) Тогда
				Продолжить;
			КонецЕсли;
			
			Значение = ЗначениеЯчейки(Выборка, ЗначениеПредставления, ОписаниеКолонки, ЗаменяемыеЗначения, КэшЗначений, ПараметрыСоздания);
			Строка[ОписаниеКолонки.Имя] = Значение;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТаблицаЗначений;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВыборкаИзТабличногоДокумента(ТабличныйДокумент)
	
	ВсегоСтрок = ТабличныйДокумент.ВысотаТаблицы;
	ВсегоКолонок = ТабличныйДокумент.ШиринаТаблицы;
	
	Область = ТабличныйДокумент.Область(1, 1, ВсегоСтрок, ВсегоКолонок);
	
	ИсточникДанных = Новый ОписаниеИсточникаДанных(Область);
	ПостроительОтчета = Новый ПостроительОтчета;
	ПостроительОтчета.ИсточникДанных = ИсточникДанных;
	ПостроительОтчета.Выполнить();
	
	Возврат ПостроительОтчета.Результат.Выбрать();
	
КонецФункции

Функция ТабличныйДокумент(Знач ТабличныйДокумент)
	
	ТипПараметра = ТипЗнч(ТабличныйДокумент);
	
	Если ТипПараметра = Тип("ТабличныйДокумент") Тогда
		Возврат ТабличныйДокумент;
	ИначеЕсли ТипПараметра = Тип("Строка") Тогда
		Возврат ЮТОбщийВызовСервера.Макет(ТабличныйДокумент);
	Иначе
		ВызватьИсключение ЮТОбщий.НеподдерживаемыйПараметрМетода("ЮТТестовыеДанныеВызовСервера.ТабличныйДокумент", ТабличныйДокумент);
	КонецЕсли;
	
КонецФункции

Функция ОписаниеКолонок(ТабличныйДокумент, ОписанияТипов)
	
	Колонки = Новый Массив();
	ВсеКолонки = Новый Массив();
	
	ОсновныеКолонки = Новый Структура();
	
	Для Инд = 1 По ТабличныйДокумент.ШиринаТаблицы Цикл
		
		ИмяКолонки = ТабличныйДокумент.Область(1, Инд).Текст;
		ЧастиИмени = СтрРазделить(ИмяКолонки, ".");
		
		Если ПустаяСтрока(ИмяКолонки) ИЛИ ОписанияТипов[ЧастиИмени[0]] = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ЭтоВложенныйРеквизит = ЧастиИмени.Количество() = 2;
		ЭтоОсновнойРеквизит = ЧастиИмени.Количество() = 1;
		
		ОписаниеКолонки = ОписаниеКолонки(Инд - 1);
		
		Если ЭтоОсновнойРеквизит Тогда
			ОписаниеКолонки.Имя = ИмяКолонки;
		Иначе
			ОписаниеКолонки.Имя = ЧастиИмени[1];
		КонецЕсли;
		
		ОписаниеКолонки.ОписаниеТипа = ОписанияТипов[ИмяКолонки];
		
		Если ОписаниеКолонки.ОписаниеТипа = Неопределено И ЭтоВложенныйРеквизит Тогда
			
			Родитель = ОсновныеКолонки[ЧастиИмени[0]];
			Реквизиты = Родитель.ОписаниеОбъектаМетаданных.Реквизиты;
			
			Если Реквизиты.Свойство(ЧастиИмени[1]) Тогда
				ОписаниеКолонки.ОписаниеТипа = Реквизиты[ЧастиИмени[1]].Тип;
			Иначе
				Продолжить; // TODO
			КонецЕсли;
			
		КонецЕсли;
		
		ДозаполнитьОписаниеКолонки(ОписаниеКолонки);
		
		ВсеКолонки.Добавить(ОписаниеКолонки);
		
		Если ЭтоОсновнойРеквизит Тогда
			
			Колонки.Добавить(ОписаниеКолонки);
			ОсновныеКолонки.Вставить(ИмяКолонки, ОписаниеКолонки);
			
		ИначеЕсли ЭтоВложенныйРеквизит Тогда
			
			Родитель = ОсновныеКолонки[ЧастиИмени[0]];
			Родитель.ДополнительныеРеквизиты.Добавить(ОписаниеКолонки);
			
		Иначе
			
			ВызватьИсключение СтрШаблон("Недопустимо использовать несколько точек в имени колонки, `%1`", ИмяКолонки);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого ОписаниеКолонки Из ВсеКолонки Цикл
		ОписаниеКолонки.Составное = ЗначениеЗаполнено(ОписаниеКолонки.ДополнительныеРеквизиты);
	КонецЦикла;
	
	Возврат Колонки;
	
КонецФункции

Функция ОписаниеКолонки(Индекс)
	
	ОписаниеКолонки = Новый Структура;
	ОписаниеКолонки.Вставить("Индекс", Индекс);
	ОписаниеКолонки.Вставить("Имя", "");
	
	ОписаниеКолонки.Вставить("ОписаниеТипа", Неопределено);
	ОписаниеКолонки.Вставить("ТипЗначения", Неопределено);
	ОписаниеКолонки.Вставить("Ссылочный", Ложь);
	ОписаниеКолонки.Вставить("ДополнительныеРеквизиты", Новый Массив());
	ОписаниеКолонки.Вставить("Составное", Ложь);
	ОписаниеКолонки.Вставить("Менеджер", Неопределено);
	ОписаниеКолонки.Вставить("ОписаниеОбъектаМетаданных", Неопределено);
	ОписаниеКолонки.Вставить("ЭтоПеречисление", Ложь);
	ОписаниеКолонки.Вставить("ЭтоЧисло", Ложь);
	ОписаниеКолонки.Вставить("ЭтоДата", Ложь);
	
	Возврат ОписаниеКолонки;
	
КонецФункции

Процедура ДозаполнитьОписаниеКолонки(ОписаниеКолонки)
	
	ТипЗначения = ОписаниеКолонки.ОписаниеТипа.Типы()[0];
	ОписаниеКолонки.ТипЗначения = ТипЗначения;
	
	ОписаниеКолонки.Ссылочный = ЮТТипыДанныхСлужебный.ЭтоСсылочныйТип(ТипЗначения);
	ОписаниеКолонки.ЭтоЧисло = ТипЗначения = Тип("Число");
	ОписаниеКолонки.ЭтоДата = ТипЗначения = Тип("Дата");
	
	Если ОписаниеКолонки.Ссылочный Тогда
		ОписаниеКолонки.ОписаниеОбъектаМетаданных = ЮТМетаданные.ОписаниеОбъектаМетаданных(ТипЗначения);
		ОписаниеКолонки.ЭтоПеречисление = ЮТМетаданные.ЭтоПеречисление(ОписаниеКолонки.ОписаниеОбъектаМетаданных);
		ОписаниеКолонки.Менеджер = ЮТОбщий.Менеджер(ОписаниеКолонки.ОписаниеОбъектаМетаданных);
	КонецЕсли;
		
КонецПроцедуры

Функция ЗначениеЯчейки(СтрокаДанных, ЗначениеПредставления, ОписаниеКолонки, ЗаменяемыеЗначения, КэшЗначений, ПараметрыСоздания)
	
	Значение = ЗаменяемыеЗначения[ЗначениеПредставления];
	
	КэшироватьЗначение = Значение = Неопределено И ОписаниеКолонки.Менеджер <> Неопределено;
	
	Если КэшироватьЗначение Тогда
		Если КэшЗначений[ОписаниеКолонки.Менеджер] = Неопределено Тогда
			КэшЗначений.Вставить(ОписаниеКолонки.Менеджер, Новый Соответствие());
		Иначе
			Значение = КэшЗначений[ОписаниеКолонки.Менеджер][ЗначениеПредставления];
		КонецЕсли;
	КонецЕсли;
	
	Если Значение <> Неопределено Тогда
		Возврат Значение;
	КонецЕсли;
	
	Если ОписаниеКолонки.Составное Тогда
		ЗначенияРеквизитов = ЗначенияРеквизитов(СтрокаДанных, ОписаниеКолонки, ЗаменяемыеЗначения, КэшЗначений, ПараметрыСоздания);
		Значение = ПривестиЗначениеКолонки(ОписаниеКолонки, ЗначениеПредставления, ЗначенияРеквизитов, ПараметрыСоздания);
	Иначе
		Значение = ПривестиЗначениеКолонки(ОписаниеКолонки, ЗначениеПредставления, Неопределено, ПараметрыСоздания);
	КонецЕсли;
	
	Если КэшироватьЗначение Тогда
		КэшЗначений[ОписаниеКолонки.Менеджер].Вставить(ЗначениеПредставления, Значение);
	КонецЕсли;
	
	Возврат Значение;
	
КонецФункции

Процедура ПодготовитьПараметрыЗаполненияТаблицы(КэшЗначений, ЗаменяемыеЗначения, ПараметрыЗаполнения, Колонки)
	
	Если ЗаменяемыеЗначения = Неопределено Тогда
		ЗаменяемыеЗначения = Новый Соответствие;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(КэшЗначений) Тогда
		КэшЗначений = Новый Соответствие;
	КонецЕсли;
	
	Для Каждого Колонка Из Колонки Цикл
		
		Если НЕ Колонка.Ссылочный Тогда
			Продолжить;
		КонецЕсли;
		
		Если КэшЗначений[Колонка.Менеджер] = Неопределено Тогда
			КэшЗначений.Вставить(Колонка.Менеджер, Новый Соответствие);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ЗначенияРеквизитов(СтрокаТаблицы, ОписаниеКолонки, ЗаменяемыеЗначения, КэшЗначений, Параметры)
	
	ЗначенияРеквизитов = Новый Структура();
	
	Для Каждого ОписаниеВложеннойКолонки Из ОписаниеКолонки.ДополнительныеРеквизиты Цикл
		
		ПредставлениеЗначения = СтрокаТаблицы[ОписаниеВложеннойКолонки.Индекс];
		Если ПустаяСтрока(ПредставлениеЗначения) Тогда
			Продолжить;
		КонецЕсли;
		
		Значение = ЗначениеЯчейки(СтрокаТаблицы, ПредставлениеЗначения, ОписаниеВложеннойКолонки, ЗаменяемыеЗначения, КэшЗначений, Параметры);
		ЗначенияРеквизитов.Вставить(ОписаниеВложеннойКолонки.Имя, Значение);
		
	КонецЦикла;
	
	ОписаниеОбъектаМетаданных = ОписаниеКолонки.ОписаниеОбъектаМетаданных;
	
	Если ОписаниеОбъектаМетаданных.ОписаниеТипа.Имя = "Справочник" Тогда
		ИмяРеквизита = "Наименование";
		Если ОписаниеОбъектаМетаданных.Реквизиты.Свойство(ИмяРеквизита) = Неопределено Тогда
			ИмяРеквизита = "Код";
		КонецЕсли;
		ЗначенияРеквизитов.Вставить(ИмяРеквизита, СтрокаТаблицы[ОписаниеКолонки.Индекс]);
	КонецЕсли;
	
	Возврат ЗначенияРеквизитов;
	
КонецФункции

Функция ПривестиЗначениеКолонки(ОписаниеКолонки, ЗначениеПредставления, ЗначенияРеквизитов, ПараметрыЗаписи)
	
	Если ОписаниеКолонки.ЭтоПеречисление Тогда
		Значение = ОписаниеКолонки.Менеджер[ЗначениеПредставления];
	ИначеЕсли ОписаниеКолонки.Ссылочный Тогда
		Значение = СоздатьНовуюЗапись(ОписаниеКолонки, ЗначенияРеквизитов, ПараметрыЗаписи);
	ИначеЕсли ОписаниеКолонки.ЭтоДата Тогда
		Значение = ЮТПреобразования.ПривестиЗначениеКДате(ОписаниеКолонки.ОписаниеТипа, ЗначениеПредставления);
	ИначеЕсли ОписаниеКолонки.ЭтоЧисло Тогда
		Значение = ЮТПреобразования.ПривестиЗначениеКЧислу(ОписаниеКолонки.ОписаниеТипа, ЗначениеПредставления);
	Иначе
		Значение = ОписаниеКолонки.ОписаниеТипа.ПривестиЗначение(ЗначениеПредставления);
	КонецЕсли;
	
	Возврат Значение;
	
КонецФункции

Функция СоздатьНовуюЗапись(ОписаниеКолонки, ЗначенияРеквизитов, ПараметрыЗаписи)
	
	Конструктор = ЮТТестовыеДанные.КонструкторОбъекта(ОписаниеКолонки.Менеджер);
	
	Если ЗначениеЗаполнено(ЗначенияРеквизитов) Тогда
		Для Каждого ДанныеЗначения Из ЗначенияРеквизитов Цикл
			Конструктор.Установить(ДанныеЗначения.Ключ, ДанныеЗначения.Значение);
		КонецЦикла;
	КонецЕсли;
	
	Если ПараметрыЗаписи.ФикцияОбязательныхПолей Тогда
		Конструктор.ФикцияОбязательныхПолей();
	КонецЕсли;
	
	Возврат Конструктор.Записать(, ПараметрыЗаписи.ПараметрыЗаписи.ОбменДаннымиЗагрузка);
	
КонецФункции

#КонецОбласти
