//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2021-2022 BIA-Technologies Limited Liability Company
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

/////////////////////////////////////////////////////////////////////////////////
// Экспортные процедуры и функции, предназначенные для использования другими 
// объектами конфигурации или другими программами
///////////////////////////////////////////////////////////////////////////////// 
#Область ТестыAPI

Процедура ИсполняемыеСценарии(ДополнительныеПараметры = Неопределено) Экспорт
	
	ЮТТесты
		.Тест("ПрочитатьНаборыТестов")
		.Тест("ИсполняемыеСценарииМодуля")
		.Тест("ЭтоТестовыйМодуль");
		
КонецПроцедуры

#КонецОбласти

#Область Тесты

Процедура ПрочитатьНаборыТестов() Экспорт
	
	ПараметрыЗапуска = ЮТФабрика.ПараметрыЗапуска();
	ПараметрыЗапуска.filter.extensions = Неопределено;
	ПараметрыЗапуска.filter.modules = ЮТОбщий.ЗначениеВМассиве("ОМ_ЮТЧитатель");
	
	Наборы = ЮТЧитатель.ПрочитатьНаборыТестов(ПараметрыЗапуска);
	ЮТУтверждения.Что(Наборы, "Прочитанные наборы")
		.ИмеетТип("Массив")
		.ИмеетДлину(1);
	
	НаборМодуля = Наборы[0];
	
	ЮТУтверждения.Что(НаборМодуля, "Набор тестов ОМ_ЮТЧитатель")
		.ИмеетТип("Структура")
		.Свойство("МетаданныеМодуля").ИмеетТип("Структура")
		.Свойство("НаборыТестов").ИмеетТип("Массив");
	
	МетаданныеМодуля = НаборМодуля.МетаданныеМодуля;
	ЮТУтверждения.Что(МетаданныеМодуля, "Метаданные модуля")
		.Заполнено()
		.ИмеетТип("Структура")
		.Свойство("Имя").Равно("ОМ_ЮТЧитатель")
		.Свойство("КлиентОбычноеПриложение").Равно(Истина)
		.Свойство("КлиентУправляемоеПриложение").Равно(Истина)
		.Свойство("ВызовСервера").Равно(Ложь)
		.Свойство("ПолноеИмя").Равно("YAXUNIT.ОМ_ЮТЧитатель")
		.Свойство("Сервер").Равно(Ложь);
	
	НаборыТестов = НаборМодуля.НаборыТестов;
	
	ЮТУтверждения.Что(НаборыТестов, "Наборы тестов модуля")
		.ИмеетТип("Массив")
		.ИмеетДлину(1);
	
	ЮТУтверждения.Что(НаборыТестов[0], "Набор тестов модуля")
		.ИмеетТип("Структура")
		.Свойство("Имя").Равно("Тесты")
		.Свойство("ОписаниеОшибки")
		.Свойство("Представление").Равно("ОМ_ЮТЧитатель")
		.Свойство("Теги").ИмеетТип("Массив")
		.Свойство("Теги").ИмеетДлину(0)
		.Свойство("Тесты").ИмеетТип("Массив");
	
	Тесты = НаборыТестов[0].Тесты;
	
	ЮТУтверждения.Что(Тесты.Количество(), "Количество тестов модуля")
		.БольшеИлиРавно(1);
	
	ЮТУтверждения.Что(Тесты[0], "Первый тест")
		.Свойство("Имя").Равно("ПрочитатьНаборыТестов")
		.Свойство("Представление").Равно("ПрочитатьНаборыТестов")
		.Свойство("Теги").ИмеетТип("Массив")
		.Свойство("Теги").ИмеетДлину(0)
		.Свойство("КонтекстВызова").ИмеетТип("Массив")
		.Свойство("КонтекстВызова").Содержит("КлиентУправляемоеПриложение")
		.Свойство("КонтекстВызова").Содержит("КлиентОбычноеПриложение")
		.Свойство("КонтекстВызова").ИмеетДлину(2);
	
	ПараметрыЗапуска = ЮТФабрика.ПараметрыЗапуска();
	ПараметрыЗапуска.filter.extensions = ЮТОбщий.ЗначениеВМассиве("tests");
	
	Наборы = ЮТЧитатель.ПрочитатьНаборыТестов(ПараметрыЗапуска);
	ЮТУтверждения.Что(Наборы, "Прочитанные наборы расширения tests")
		.ИмеетДлину(2);
	
КонецПроцедуры

Процедура ИсполняемыеСценарииМодуля() Экспорт
	
	МетаданныеМодуля = Новый Структура;
	МетаданныеМодуля.Вставить("Имя", "ОМ_СтроковыеФункцииКлиентСервер");
	МетаданныеМодуля.Вставить("КлиентУправляемоеПриложение", Истина);
	МетаданныеМодуля.Вставить("КлиентОбычноеПриложение", Истина);
	МетаданныеМодуля.Вставить("Клиент", Ложь);
	МетаданныеМодуля.Вставить("Сервер", Истина);
	МетаданныеМодуля.Вставить("ВызовСервера", Ложь);
	
	Сценарии = ЮТЧитатель.ИсполняемыеСценарииМодуля(МетаданныеМодуля);
	
	ЮТУтверждения.Что(Сценарии, "Сценарии")
		.ИмеетТип("Массив")
		.ИмеетДлину(3);
	
	Наборы = ЮТОбщий.КоллекцияВСоответствие(Сценарии, "Имя");
	
	ЮТУтверждения.Что(Наборы, "Наборы тестов")
		.Свойство("Тесты").ИмеетТип("Структура")
		.Свойство("ТестовыйНабор").ИмеетТип("Структура")
		.Свойство("Тестовый набор 2").ИмеетТип("Структура")
		.ИмеетДлину(3);
	
	Набор1 = Наборы["Тесты"];
	Набор2 = Наборы["ТестовыйНабор"];
	Набор3 = Наборы["Тестовый набор 2"];
	
	ЮТУтверждения.Что(Набор1, "Набор по умолчанию")
		.Свойство("Имя").Равно("Тесты")
		.Свойство("Представление").Равно("ОМ_СтроковыеФункцииКлиентСервер")
		.Свойство("Теги").ИмеетДлину(0)
		.Свойство("Тесты").ИмеетДлину(3);
	
	ЮТУтверждения.Что(Набор2, "Набор ""ТестовыйНабор""")
		.Свойство("Имя").Равно("ТестовыйНабор")
		.Свойство("Представление").Равно("ТестовыйНабор")
		.Свойство("Теги").ИмеетДлину(0)
		.Свойство("Тесты").ИмеетДлину(3);
	
	ЮТУтверждения.Что(Набор3, "Набор ""Тестовый набор 2""")
		.Свойство("Имя").Равно("Тестовый набор 2")
		.Свойство("Теги").ИмеетДлину(2)
		.Свойство("Тесты").ИмеетДлину(1);
	
	ТестыПоУмолчанию = Набор1.Тесты;
	ЮТУтверждения.Что(ТестыПоУмолчанию[0], "Первый тест набора по умолчанию")
		.ИмеетТип("Структура")
		.Свойство("Имя").Равно("ТестовыйМетод3")
		.Свойство("Представление").Равно("Тестовый метод 3")
		.Свойство("Теги").ИмеетДлину(0)
		.Свойство("КонтекстВызова").Содержит("КлиентОбычноеПриложение")
		.Свойство("КонтекстВызова").Содержит("КлиентУправляемоеПриложение")
		.Свойство("КонтекстВызова").Содержит("Сервер")
		.Свойство("КонтекстВызова").ИмеетДлину(3);
	
	ЮТУтверждения.Что(ТестыПоУмолчанию[1], "Второй тест набора по умолчанию")
		.Свойство("Имя").Равно("ТестовыйМетод4")
		.Свойство("Представление").Равно("ТестовыйМетод4")
		.Свойство("Теги").ИмеетДлину(0)
		.Свойство("КонтекстВызова").Содержит("КлиентОбычноеПриложение")
		.Свойство("КонтекстВызова").Содержит("КлиентУправляемоеПриложение")
		.Свойство("КонтекстВызова").ИмеетДлину(2);
	
	ЮТУтверждения.Что(ТестыПоУмолчанию[2], "Третий тест набора по умолчанию")
		.Свойство("Имя").Равно("ТестовыйМетод4")
		.Свойство("КонтекстВызова").Содержит("Сервер")
		.Свойство("КонтекстВызова").ИмеетДлину(1);
	
КонецПроцедуры

Процедура ЭтоТестовыйМодуль() Экспорт
	
	Варианты = Новый Структура();
	Варианты.Вставить("ОМ_ЮТЧитатель", Истина);
	Варианты.Вставить("ОМ_СтроковыеФункцииКлиентСервер", Истина);
	Варианты.Вставить("ОМ_ОшибкаЗагрузкиСценариев", Истина);
	Варианты.Вставить("ЮТЧитатель", Ложь);
	
	Для Каждого Вариант Из Варианты Цикл
		
		ОписаниеМодуля = ЮТМетаданныеСервер.МетаданныеМодуля(Вариант.Ключ);
		ЮТУтверждения.Что(ЮТЧитатель.ЭтоТестовыйМодуль(ОписаниеМодуля), "Проверка модуля " + Вариант.Ключ)
			.Равно(Вариант.Значение);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти
